<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="QA.ExecutionAddSheet" locale="">
  <web>QA</web>
  <name>ExecutionAddSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>QA.ExecutionClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>#if($doc.name == 'ExecutionAddSheet')Execution Add Sheet#{else}$services.display.title($doc, {'displayerHint': 'default'})#end</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#macro(addExecution)
  #set($execution = {})
  #set($prefix='QA.ExecutionClass_')
  #set($cookieProperties = ['product','browser','database','servletContainer'])
  #foreach($entry in $request.parameterMap.entrySet())
    #if($entry.key.startsWith($prefix))
      #set($propNameStart=$entry.key.indexOf('_', $prefix.length())+1)
      #set($propertyName=$entry.key.substring($propNameStart))
      #set($discard=$execution.put($propertyName, $entry.value.get(0)))
      #if($cookieProperties.contains($propertyName))
        ## We escape the cookie value because some of the characters are not allowed. (e.g. backslash)
        #set($discard = $response.addCookie("$prefix$propertyName", "$escapetool.url($entry.value.get(0))", 3600))
      #end
    #end
  #end
  ## Compute the Page name which will be used to store the execution
  #set($version = $execution.product.replaceAll('^.*?(\d+).*$', '$1'))
  #set($targetDocRef = $services.model.createDocumentReference($xcontext.database,
    'TestReportingExecutions', "$execution.test$version"))
  #set($targeDoc = $xwiki.getDocument($targetDocRef))
  #set($object = $targeDoc.newObject('QA.ExecutionClass'))
  #foreach($entry in $execution.entrySet())
    #set($discard = $object.set($entry.key, $entry.value)) 
  #end
  #set($discard=$targeDoc.save())
  $response.sendRedirect($doc.getURL())
#end

#macro(displayExecutionForm)
  #set ($discard = $xwiki.jsx.use('QA.ExecutionAddSheet'))
  {{html wiki="true"}}
  &lt;form class="xform" action="$doc.getURL('get', $request.queryString)"&gt;
    ## If we don't receive a request parameter for the test name,
    ## we generate the input field so the user can select the test this execution is related to
    #if(!$doc.getObject('QA.TestClass'))
      ; &lt;label for="QA.ExecutionClass_${object.number}_test"&gt;$doc.displayPrettyName('test', false, false)&lt;/label&gt;
      : $doc.display('test', 'edit')
    #else
      ; &lt;label&gt;Test&lt;/label&gt;
        &lt;p&gt;$doc.fullName&lt;/p&gt;
        &lt;input type="hidden" name="QA.ExecutionClass_${object.number}_test" value="$doc.fullName"/&gt;
    #end
    ; &lt;label&gt;Steps to Reproduce&lt;/label&gt;
    #if($doc.name!='ExecutionAddSheet')
    : {{include reference="$services.model.serialize($doc.documentReference)"/}}
    #end
    ; &lt;label&gt;Expected Results&lt;/label&gt;
    #if($doc.name!='ExecutionAddSheet')
    : $doc.display('expectedResult', $doc.getObject('QA.TestClass'))
    #end
    #if($doc.name!='ExecutionAddSheet')
    ; &lt;label&gt;{{translation key=qaapp.WebHome.LiveTable.userType/}}&lt;/label&gt;
    : $doc.display('userType', $doc.getObject('QA.TestClass'))
    #end	
    #if($doc.name!='ExecutionAddSheet')
    ; &lt;label&gt;Automated&lt;/label&gt;
    : $doc.display('automated', $doc.getObject('QA.TestClass')) #if($doc.getObject('QA.TestClass').getProperty('automated').value == "yes") [[image:icon:accept]] #else [[image:icon:cancel]] #end
    #end
    &lt;div class="hidden"&gt;
      &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}"/&gt;
      &lt;input type="hidden" name="sheet" value="QA.ExecutionAddSheet"/&gt;
      &lt;input type="hidden" name="QA.ExecutionClass_${object.number}_user" value="$object.getProperty('user').value"/&gt;
      #set($dateFormat=$xwiki.getDocument('QA.ExecutionClass').getxWikiClass().get('date').getProperty('dateFormat').value)
      &lt;input type="hidden" name="QA.ExecutionClass_${object.number}_date" value="$escapetool.xml($datetool.format($dateFormat, $object.getProperty('date').value))"/&gt;
    &lt;/div&gt;
    ## Product version selector    
    ; &lt;label for="QA.ExecutionClass_${object.number}_product"&gt;$doc.displayPrettyName('product', false, false)&lt;/label&gt;
    : $doc.display('product', 'edit')
    ##
    ## App version selector    
    ; &lt;label for="QA.ExecutionClass_${object.number}_application"&gt;$doc.displayPrettyName('application', false, false)&lt;/label&gt;
    : $doc.display('application', 'edit')
    ##
    ## Browser Version Selector
    ; &lt;label for="QA.ExecutionClass_${object.number}_browser"&gt;$doc.displayPrettyName('browser', false, false)&lt;/label&gt;
    : $doc.display('browser', 'edit')
    ##
    ## Database Version Selector
    ; &lt;label for="QA.ExecutionClass_${object.number}_database"&gt;$doc.displayPrettyName('database', false, false)&lt;/label&gt;
    : $doc.display('database', 'edit')
    ##
    ## Servlet Container Version Selector
    ; &lt;label for="QA.ExecutionClass_${object.number}_servletContainer"&gt;$doc.displayPrettyName('servletContainer', false, false)&lt;/label&gt;
    : $doc.display('servletContainer', 'edit')
    ## Java Version Selector
    ; &lt;label for="QA.ExecutionClass_${object.number}_java"&gt;$doc.displayPrettyName('java', false, false)&lt;/label&gt;
    : $doc.display('java', 'edit')
    ## Distribution Version Selector
    ; &lt;label for="QA.ExecutionClass_${object.number}_distribution"&gt;$doc.displayPrettyName('distribution', false, false)&lt;/label&gt;
    : $doc.display('distribution', 'edit')
    ## Passed/Fail
    ; &lt;label for="QA.ExecutionClass_${object.number}_passed"&gt;$doc.displayPrettyName('passed', false, false)&lt;/label&gt;
    ; $doc.display('passed', 'edit')
    ##
    ## Jira Issue
    ; &lt;label for="QA.ExecutionClass_${object.number}_jira&gt;$doc.displayPrettyName('jira', false, false)&lt;/label&gt;
    : $doc.display('jira', 'edit')
    &lt;p class="buttons"&gt;
      &lt;span class="buttonwrapper"&gt;
        &lt;input class="button" type="submit" name="addObject" value="Run Test"/&gt;
      &lt;/span&gt;
    &lt;/p&gt;
  &lt;/form&gt;
  {{/html}}
#end

#macro(skinExtensionHooks)
  {{html}}
  ## AJAX request
  ## Hook for inserting CSS skin extensions
  ## - Skin JAR extension hook. Placed first to allow other skin extensions to override it.
  &lt;!-- com.xpn.xwiki.plugin.skinx.CssResourceSkinExtensionPlugin --&gt;
  &lt;!-- com.xpn.xwiki.plugin.skinx.CssSkinExtensionPlugin --&gt;
  &lt;!-- com.xpn.xwiki.plugin.skinx.CssSkinFileExtensionPlugin --&gt;
  ## Hooks for inserting JavaScript skin extensions
  ##
  ## - Skin JAR extension hook. Placed first to allow other skin extensions to override it.
  &lt;!-- com.xpn.xwiki.plugin.skinx.JsResourceSkinExtensionPlugin --&gt;
  ## - Skin file extension hook.
  &lt;!-- com.xpn.xwiki.plugin.skinx.JsSkinFileExtensionPlugin --&gt;
  ## - Skin extension hook
  &lt;!-- com.xpn.xwiki.plugin.skinx.JsSkinExtensionPlugin --&gt;
  ##
  {{/html}}
#end

#macro(setDefaultExecutionValues)
  #set($object=$doc.newObject('QA.ExecutionClass'))
  #set($discard=$doc.use($object))
  #if ("$!object.getProperty('user').value"=="")
    ## We want to set the User with a absolute reference
    #set($discard=$object.set('user', $services.model.serialize($xcontext.userReference, 'default')))
  #end
  #if ("$!object.getProperty('date').value"=="")
    #set($discard=$object.set('date', $datetool.date))
  #end
  ## We populate the object with the product value from the cookie
  #if ("$!object.getProperty('product').value"=="")
    #set($cookieProduct = $request.getCookie('QA.ExecutionClass_product').getValue())
    #if ("$!cookieProduct" != "" || $cookieProduct == "")
      #set($discard=$object.set('product', $util.decodeURI($cookieProduct)))
    #end
  #end
  ## We populate the object with the browser value from the cookie
  #if ("$!object.getProperty('browser').value"=="")
    #set($cookieBrowser = $request.getCookie('QA.ExecutionClass_browser').getValue())
    #if ("$!cookieBrowser" != "" || $cookieBrowser == "")
      #set($discard=$object.set('browser', $util.decodeURI($cookieBrowser)))
    #end
  #end
  ## We populate the object with the database value from the cookie
  #if ("$!object.getProperty('database').value"=="")
    #set($cookieDatabase = $request.getCookie('QA.ExecutionClass_database').getValue())
    #if ("$!cookieDatabase" != "" || $cookieDatabase == "")
      #set($discard=$object.set('database', $util.decodeURI($cookieDatabase)))
    #end
  #end
  ## We populate the object with the servlet container value from the cookie
  #if ("$!object.getProperty('servletContainer').value"=="")
    #set($cookieServletContainer = $request.getCookie('QA.ExecutionClass_servletContainer').getValue())
    #if ("$!cookieServletContainer" != "" || $cookieServletContainer == "")
      #set($discard=$object.set('servletContainer', $util.decodeURI($cookieServletContainer)))
    #end
  #end
#end
{{/velocity}}

{{velocity}}
#if($isGuest)
  {{info}}Please Login{{/info}}
#else
  #if($request.addObject)
    ## TODO: Add CSRF Token verification.
    #addExecution
  #else
    #if($request.xpage=='plain')
      #skinExtensionHooks##
    #end
    #setDefaultExecutionValues
    #displayExecutionForm
  #end
#end
{{/velocity}}</content>
  <object>
    <name>QA.ExecutionAddSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>b0d5dad0-e8df-483f-984c-c860f456fef9</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery'], function($) {
  shortcut.add("Alt+Shift+q", function() {
    let submitButton = $('input.button[name="addObject"]');
    submitButton.click();
  });
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use/>
    </property>
  </object>
</xwikidoc>
